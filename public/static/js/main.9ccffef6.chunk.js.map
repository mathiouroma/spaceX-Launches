{"version":3,"sources":["components/spacex_default.jpg","components/spacex_default2.jpg","components/spacex_default3.jpg","logo.png","fonts/BankGothicLtBTLight.ttf","components/Login.js","components/Initial.js","components/FutureLaunchItem.js","components/FutureMisionKey.js","components/FutureLaunches.js","components/FutureLaunch.js","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","components/HistoryItem.js","components/Historical.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","Component","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","Auth","props","handleChange","event","preventDefault","target","name","value","state","email","test","password","setState","handleSubmit","redirect","console","info","error","this","push","to","className","onSubmit","noValidate","htmlFor","type","onChange","onClick","HoverText","styled","h2","Initial","style","marginTop","flexDirection","flex","alignItems","textDecoration","backgroundColor","textAlign","margin","fontSize","color","marginLeft","marginRight","showThumbs","infiniteLoop","autoPlay","swipeable","showArrows","showStatus","width","src","spacex_default","alt","height","spacex_default2","spacex_default3","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","classNames","format","FutureMissionKey","LAUNCHES_QUERY","gql","Launches","Fragment","query","loading","data","log","futurelaunches","map","key","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","MissionKey","launches","history","title","event_date_utc","id","HISTORICAL_QUERY","Historical","historical","History","historicalUnique","details","article","links","href","rel","client","ApolloClient","uri","App","logo","display","exact","path","component","FutureLaunches","FutureLaunch","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ccffef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacex_default.c9172691.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spacex_default2.6d965ee0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spacex_default3.f3a52c9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","module.exports = __webpack_public_path__ + \"static/media/BankGothicLtBTLight.8058c5fa.ttf\";","import React, { Component } from 'react';\r\nimport '../style.css';\r\nimport { AUTH_TOKEN } from '../constants'\r\nimport {\r\n    Redirect\r\n} from 'react-router-dom';\r\n// import { Mutation } from 'react-apollo'\r\n// import gql from 'graphql-tag'\r\n\r\n// const SIGNUP_MUTATION = gql`\r\n//   mutation SignupMutation($email: String!, $password: String!, $name: String!) {\r\n//     signup(email: $email, password: $password, name: $name) {\r\n//       token\r\n//     }\r\n//   }\r\n// `\r\n\r\n// const LOGIN_MUTATION = gql`\r\n//   mutation LoginMutation($email: String!, $password: String!) {\r\n//     login(email: $email, password: $password) {\r\n//       token\r\n//     }\r\n//   }\r\n// `\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <Auth />\r\n        );\r\n    }\r\n}\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // fullName: null,\r\n            email: null,\r\n            password: null,\r\n            errors: {\r\n                // fullName: '',\r\n                email: '',\r\n                password: '',\r\n            },\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            // case 'fullName':\r\n            //     errors.fullName =\r\n            //         value.length < 5\r\n            //             ? 'Full Name must be 5 characters long!'\r\n            //             : '';\r\n            //     break;\r\n            case 'email':\r\n                errors.email =\r\n                    validEmailRegex.test(value)\r\n                        ? ''\r\n                        : 'Email is not valid!';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                    value.length < 8\r\n                        ? 'Password must be 8 characters long!'\r\n                        : '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors, [name]: value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validateForm(this.state.errors) && this.state.email !== null && this.state.password !== null) {\r\n            this.setState({ redirect: true })\r\n            console.info('Valid Form')\r\n        } else {\r\n            console.error('Invalid Form')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors, redirect, } = this.state;\r\n        if (redirect) {\r\n            return <Redirect push to=\"/Initial\" />\r\n        }\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='form-wrapper'>\r\n                    <h2>Login</h2>\r\n                    <form onSubmit={this.handleSubmit} noValidate>\r\n                        {/* <div className='fullName'>\r\n                            <label htmlFor=\"fullName\">Full Name</label>\r\n                            <input type='text' name='fullName' onChange={this.handleChange} noValidate />\r\n                            {errors.fullName.length > 0 &&\r\n                                <span className='error'>{errors.fullName}</span>}\r\n                        </div> */}\r\n                        <div className='email'>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type='email' name='email' onChange={this.handleChange} noValidate />\r\n                            {errors.email.length > 0 &&\r\n                                <span className='error'>{errors.email}</span>}\r\n                        </div>\r\n                        <div className='password'>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type='password' name='password' onChange={this.handleChange} noValidate />\r\n                            {errors.password.length > 0 &&\r\n                                <span className='error'>{errors.password}</span>}\r\n                        </div>\r\n                        {/* <div className='info'>\r\n                            <small>Password must be eight characters in length.</small>\r\n                        </div> */}\r\n                        <div className='submit'>\r\n                            <button onClick={this.handleSubmit}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import React, { Fragment, Component } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n// import { Slide } from 'react-slideshow-image';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport spacex_default from './spacex_default.jpg';\r\nimport spacex_default2 from './spacex_default2.jpg';\r\nimport spacex_default3 from './spacex_default3.jpg';\r\n\r\nconst HoverText = styled.h2`\r\n\tcolor: #000;\r\n\t:hover {\r\n\t\topacity:0.5\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nexport class Initial extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row col-md-12\" style={{\r\n                    marginTop: 50, flexDirection: 'row', flex: 1, alignItems: 'flex-start',\r\n\r\n                }}>\r\n                    <div className=\"col-md-4\">\r\n                        <Link to={`/history`} style={{ textDecoration: 'none' }}>\r\n                            <div className=\"card\" style={{ backgroundColor: '', }}>\r\n\r\n\r\n                                <HoverText style={{ textAlign: 'center', margin: 50, fontSize: 38, color: '#fff' }}>HISTORICAL EVENTS</HoverText>\r\n\r\n\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <Link to={`/future_launches`} style={{ textDecoration: 'none' }}>\r\n                            <div className=\"card bg-primary text-white\">\r\n\r\n\r\n                                <HoverText style={{ textAlign: 'center', margin: 50, fontSize: 38 }}>FUTURE LAUNCHES</HoverText>\r\n\r\n\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <Link to={`/launces`} style={{ textDecoration: 'none' }}>\r\n                            <div className=\"card text-white\">\r\n\r\n                                <HoverText style={{ textAlign: 'center', margin: 50, fontSize: 38 }}>LAUNCHES</HoverText>\r\n\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    {/* <div className=\"col-md-6\">\r\n                    <Link to={`/future_launches`} style={{ textDecoration: 'none' }}>\r\n                        <div className=\"card bg-info text-white\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <HoverText style={{ textAlign: 'center', margin: 50, fontSize: 38 }}>FUTURE LAUNCHES</HoverText>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div> */}\r\n                </div>\r\n                <div style={{ marginLeft: 30, marginRight: 60, marginTop: 50 }}>\r\n                    <Carousel showThumbs={false} infiniteLoop autoPlay swipeable={false} showArrows={false} showStatus={false} width='100%' >\r\n\r\n                        <div>\r\n                            <img src={spacex_default} alt=\"\" style={{ width: '100%', height: 600 }} />\r\n                        </div>\r\n                        <div>\r\n                            <img src={spacex_default2} alt=\"\" style={{ width: '100%', height: 600 }} />\r\n                        </div>\r\n                        <div>\r\n                            <img src={spacex_default3} alt=\"\" style={{ width: '100%', height: 600 }} />\r\n                        </div>\r\n\r\n                    </Carousel>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Initial;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: <span className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-info': !launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <p>Date: <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/future_launch/${flight_number}`} className='btn btn-secondary'>Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FutureMissionKey() {\r\n    return (\r\n        <div className=\"\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-info\" /> = Upcoming\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\n// import LaunchItem from './LaunchItem';\r\nimport FutureLaunchItem from './FutureLaunchItem';\r\nimport FutureMissionKey from './FutureMisionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\nquery LaunchesQuery {\r\n    futurelaunches{\r\n        flight_number\r\n        mission_name\r\n        launch_date_local\r\n        launch_success\r\n        details\r\n        \r\n    }\r\n}\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 my-3\">Future Launches</h1>\r\n                <FutureMissionKey />\r\n                <hr />\r\n                <Link to=\"/Initial\" className=\"btn btn-secondary\">Back</Link>\r\n                <hr />\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error);\r\n                            // console.log(data)\r\n                            return <React.Fragment>\r\n                                {\r\n                                    data.futurelaunches.map(launch => (\r\n                                        <FutureLaunchItem key={launch.flight_number} launch={launch} />\r\n                                    ))\r\n                                }\r\n                            </React.Fragment>\r\n\r\n                        }\r\n                    }\r\n                </Query>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\nquery LaunchQuery($flight_number: Int!){\r\n    launch(flight_number: $flight_number) {\r\nflight_number\r\nmission_name\r\nlaunch_year\r\nlaunch_success\r\nlaunch_date_local\r\ndetails\r\nrocket {\r\n    rocket_id\r\n    rocket_name\r\n    rocket_type\r\n}\r\n    }\r\n}\r\n`\r\n\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number);\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error)\r\n\r\n                            const { mission_name,\r\n                                flight_number,\r\n                                launch_year,\r\n                                launch_success,\r\n                                rocket: { rocket_id, rocket_name, rocket_type }\r\n                            } = data.launch;\r\n                            return <div>\r\n                                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span> {mission_name}</h1>\r\n                                {/* <h4 className=\"my-3\">Mission Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">{details}</li>\r\n                                </ul> */}\r\n                                <h4 className=\"my-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n                                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\r\n                                    <li className=\"list-group-item\">Launch Successful: <span className={classNames({\r\n                                        'text-success': launch_success,\r\n                                        // 'text-danger': !launch_success,\r\n                                        'text-info': !launch_success\r\n                                    })}>{launch_success ? 'Yes' : 'Pending'}</span></li>\r\n                                </ul>\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\r\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\r\n                                </ul>\r\n                                <hr />\r\n                                <Link to=\"/future_launches\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: <span className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                    })}>{mission_name}</span></h4>\r\n                    <p>Date: <Moment format=\"DD-MM-YYYY HH:mm\">{launch_date_local}</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/launch/${flight_number}`} className='btn btn-secondary'>Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MissionKey() {\r\n    return (\r\n        <div className=\"\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\nquery LaunchesQuery {\r\n    launches{\r\n        flight_number\r\n        mission_name\r\n        launch_date_local\r\n        launch_success\r\n    }\r\n}\r\n`;\r\n\r\nexport class Launches extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 my-3\">Launches</h1>\r\n                <MissionKey />\r\n                <hr />\r\n                <Link to=\"/Initial\" className=\"btn btn-secondary\">Back</Link>\r\n                <hr />\r\n                <Query query={LAUNCHES_QUERY}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error);\r\n\r\n                            return <React.Fragment>\r\n                                {\r\n                                    data.launches.map(launch => (\r\n                                        <LaunchItem key={launch.flight_number} launch={launch} />\r\n                                    ))\r\n                                }\r\n                            </React.Fragment>\r\n\r\n                        }\r\n                    }\r\n                </Query>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\nquery LaunchQuery($flight_number: Int!){\r\n    launch(flight_number: $flight_number) {\r\nflight_number\r\nmission_name\r\nlaunch_year\r\nlaunch_success\r\nlaunch_date_local,\r\nrocket {\r\n    rocket_id\r\n    rocket_name\r\n    rocket_type\r\n}\r\n    }\r\n}\r\n`\r\n\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number);\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error)\r\n\r\n                            const { mission_name,\r\n                                flight_number,\r\n                                launch_year,\r\n                                launch_success,\r\n                                rocket: { rocket_id, rocket_name, rocket_type }\r\n                            } = data.launch;\r\n                            return <div>\r\n                                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span> {mission_name}</h1>\r\n                                <h4 className=\"mb-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n                                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\r\n                                    <li className=\"list-group-item\">Launch Successful: <span className={classNames({\r\n                                        'text-success': launch_success,\r\n                                        'text-danger': !launch_success\r\n                                    })}>{launch_success ? 'Yes' : 'No'}</span></li>\r\n                                </ul>\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\r\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\r\n                                </ul>\r\n                                <hr />\r\n                                <Link to=\"/launces\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Launch\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({ history: { title, event_date_utc, id } }) {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Title: <span className={classNames({\r\n                        // 'text-success': launch_success,\r\n                        // 'text-danger': !launch_success\r\n                    })}>{title}</span></h4>\r\n                    <p>Date: <Moment format=\"DD-MM-YYYY HH:mm\">{event_date_utc}</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/history/${id}`} className='btn btn-secondary'>Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryItem from './HistoryItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst HISTORICAL_QUERY = gql`\r\nquery HistoricalQuery {\r\n    historical{\r\n    id \r\n    title \r\n    details\r\n    event_date_utc\r\n    links{\r\n        article\r\n    }\r\n}\r\n}\r\n`;\r\n\r\nexport class Historical extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"display-4 my-3\">History</h1>\r\n                <MissionKey />\r\n                <hr />\r\n                <Link to=\"/Initial\" className=\"btn btn-secondary\">Back</Link>\r\n                <hr />\r\n                <Query query={HISTORICAL_QUERY}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error);\r\n                            console.log(data)\r\n\r\n                            return <React.Fragment>\r\n                                {\r\n                                    data.historical.map(history => (\r\n                                        <HistoryItem key={history.id} history={history} />\r\n                                    ))\r\n                                }\r\n                            </React.Fragment>\r\n\r\n                        }\r\n                    }\r\n                </Query>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Historical\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst HISTORICAL_QUERY = gql`\r\nquery HistoricalQuery($id: Int!){\r\n    historicalUnique(id:$id){\r\n    id \r\n    title \r\n    flight_number\r\n    details\r\n    event_date_utc\r\n    links{\r\n        article\r\n    }\r\n}\r\n}\r\n`;\r\n\r\nexport class History extends Component {\r\n    render() {\r\n        let { id } = this.props.match.params;\r\n        id = parseInt(id);\r\n        return (\r\n            <Fragment>\r\n                <Query query={HISTORICAL_QUERY} variables={{ id }}>\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            if (loading) return <h4>Loading...</h4>\r\n                            if (error) console.log(error)\r\n                            console.log(data.historicalUnique)\r\n                            const { id, title, flight_number, details,\r\n                                links: { article }\r\n                            } = data.historicalUnique;\r\n                            return <div>\r\n                                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">TITLE:{title}</span> </h1>\r\n                                <h4 className=\"mb-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\r\n                                    <li className=\"list-group-item\">Details: {details}</li>\r\n                                    <li className=\"list-group-item\" key={id}><a href={article} rel=\"noopener noreferrer\" target='_blank'>Article</a></li>\r\n                                </ul>\r\n                                <hr />\r\n                                <Link to=\"/history\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        }\r\n                    }\r\n                </Query>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default History\r\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Initial from './components/Initial';\nimport FutureLaunches from './components/FutureLaunches';\nimport FutureLaunch from './components/FutureLaunch';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport Historical from './components/Historical';\nimport History from './components/History';\nimport './App.css';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n  // uri: 'http://localhost:5000/graphql'\n  //For deployment\n  uri: '/graphql'\n})\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt=\"SpaceX\" style={{ width: 300, display: 'block', margin: 'auto' }} />\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/launces\" component={Launches} />\n          <Route exact path=\"/future_launches\" component={FutureLaunches} />\n          <Route exact path=\"/future_launch/:flight_number\" component={FutureLaunch} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          <Route exact path=\"/history\" component={Historical} />\n          <Route exact path=\"/history/:id\" component={History} />\n        </div>\n        <div className=\"container-flex\">\n          <Route exact path=\"/Initial\" component={Initial} />\n        </div>\n\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts/BankGothicLtBTLight.ttf'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}